# one-hook

## docs

- [Introduction](https://one-hook.vercel.app/): one-hook is a carefully crafted collection of React hooks, where each hook does one thing and does it well. Following the Unix philosophy of modularity, each hook is independently packaged and can be installed separately, ensuring minimal bundle size and maximum flexibility.
- [useActions](https://one-hook.vercel.app/docs/use-actions): A simpler and typesafe alternative to useReducer.
- [useAudioAnalyser](https://one-hook.vercel.app/docs/use-audio-analyser): Real-time audio analysis based on the Web Audio API.
- [useContextualState](https://one-hook.vercel.app/docs/use-contextual-state): useState with a context.
- [useCookie (SSR only)](https://one-hook.vercel.app/docs/use-cookie): A simple typesafe state manager using cookies.
- [useCountdown](https://one-hook.vercel.app/docs/use-countdown): Countdown utility based on useInterval.
- [useDebounceFn](https://one-hook.vercel.app/docs/use-debounce-fn): A debounce function, reactified.
- [useDebounceValue](https://one-hook.vercel.app/docs/use-debounce-value): Debounce a value.
- [useDisplayMedia](https://one-hook.vercel.app/docs/use-display-media): React hook to access and manage screen sharing capabilities using the Screen Capture API.
- [useDocumentHasFocus](https://one-hook.vercel.app/docs/use-document-has-focus): Track the focus state of the document.
- [useDocumentVisibility](https://one-hook.vercel.app/docs/use-document-visibility): Track the visibility of the document.
- [useEventHandler](https://one-hook.vercel.app/docs/use-event-handler): Stabilize a function's reference across renders. The function is always up to date in effects and DOM events.
- [useEventListener](https://one-hook.vercel.app/docs/use-event-listener): React version of `addEventListener`, optimized for performance and memory usage.
- [useGeolocation](https://one-hook.vercel.app/docs/use-geolocation): Access and watch the browser's geolocation data.
- [useGetIsMounted](https://one-hook.vercel.app/docs/use-get-is-mounted): Check if a component is still mounted to avoid memory leaks.
- [useGlobalState](https://one-hook.vercel.app/docs/use-global-state): Minimalistic & Performant global state manager.
- [useInView](https://one-hook.vercel.app/docs/use-in-view): Track the visibility of an element.
- [useIntersectionObserver](https://one-hook.vercel.app/docs/use-intersection-observer): The IntersectionObserver API, reactified, simplified and optimized.
- [useInterval](https://one-hook.vercel.app/docs/use-interval): setInterval reactified, with synchronization support.
- [useInvariantContext](https://one-hook.vercel.app/docs/use-invariant-context): useContext that throws if the provider is not found.
- [useIsHydrated](https://one-hook.vercel.app/docs/use-is-hydrated): Once `true`, no hydration error can occur.
- [useIsOnline](https://one-hook.vercel.app/docs/use-is-online): Track the online state of the browser.
- [useLatestRef](https://one-hook.vercel.app/docs/use-latest-ref): Transform anything into a ref. The ref is always up to date in effects and DOM events.
- [useLockBodyScroll](https://one-hook.vercel.app/docs/use-lock-body-scroll): Lock and unlock the body scroll without layout shift.
- [useMediaRecorder](https://one-hook.vercel.app/docs/use-media-recorder): Record media streams.
- [useMergeRefs](https://one-hook.vercel.app/docs/use-merge-refs): Merge refs, returns a callback ref.
- [useMountEffect](https://one-hook.vercel.app/docs/use-mount-effect): Execute the callback when the component mounts (first effect).
- [useMutationObserver](https://one-hook.vercel.app/docs/use-mutation-observer): The MutationObserver API, reactified and simplified
- [useNavigatorPermission](https://one-hook.vercel.app/docs/use-navigator-permission): Query and track navigator permissions.
- [usePrevious](https://one-hook.vercel.app/docs/use-previous): Returns the previous value.
- [useRerender](https://one-hook.vercel.app/docs/use-rerender): Trigger rerenders on-demand.
- [useResizeObserver](https://one-hook.vercel.app/docs/use-resize-observer): The React version of the ResizeObserver API.
- [useSize](https://one-hook.vercel.app/docs/use-size): Track the size of an element.
- [useSpeechSynthesis](https://one-hook.vercel.app/docs/use-speech-synthesis): Web Speech API synthesis, reactified.
- [useStorage (SPA only)](https://one-hook.vercel.app/docs/use-storage): A simple typesafe state manager using localStorage or sessionStorage.
- [useThrottleFn](https://one-hook.vercel.app/docs/use-throttle-fn): A throttle function, reactified.
- [useTimeout](https://one-hook.vercel.app/docs/use-timeout): setTimeout, reactified.
- [useUnmountEffect](https://one-hook.vercel.app/docs/use-unmount-effect): Execute the callback when the component unmounts (cleanup effect).
- [useUpdateEffect](https://one-hook.vercel.app/docs/use-update-effect): useEffect without the initial effect.
- [useUserMedia](https://one-hook.vercel.app/docs/use-user-media): Access and manage media devices like camera and microphone.
- [useWindowSize](https://one-hook.vercel.app/docs/use-window-size): Track the dimensions of the window.

# optional

- [GitHub Repository](https://github.com/L-Blondy/one-hook)
